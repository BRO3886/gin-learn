version: "3.7"

networks:
    web:
        external: true
        name: web
    internal:
        external: false

services:
    app:
        build: 
            context: .
            dockerfile: ./ops/images/go.Dockerfile
        command: ["/app/main"]  
        container_name: app
        environment: 
            - ON_SERVER=${ON_SERVER}
            - GIN_MODE=${GIN_MODE}
            - LOG_MODE=${LOG_MODE}
            - DB_URI=${DB_URI}
            - PORT=${PORT}
        depends_on: 
            - db
            - traefik
        env_file: ./.env
        labels:
            - traefik.backend=app
            - traefik.frontend.rule=Host:gin-learn.siddharthavarma.tech
            - traefik.docker.network=web
            - traefik.port=8000
            - traefik.enable=true
        networks:
            - web
            - internal
        ports: 
            - 8000:8000
        restart: always
            
    db:
        image: "postgres:12.2-alpine"
        container_name: db
        restart: always
        ports: 
            - 5432:5432
        env_file: ./.env
        environment:
            - POSTGRES_PASSWORD=${DB_PASS}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_DB=${DB_NAME}
        volumes:
            - db-data:/var/lib/postgresql
        labels:
            - traefik.enable=false
        networks:
            - internal

    traefik:
        image: traefik:1.7.2-alpine
        restart: always
        container_name: traefik
        networks:
            - web
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./ops/proxy/traefik.toml:/etc/traefik/traefik.toml
            - ./ops/proxy/acme.json:/etc/acme/acme.json
        labels:
            - traefik.frontend.rule=Host:gin-learn.siddharthavarma.tech
            - traefik.port=8080
            - traefik.enable=true
            # - traefik.frontend.auth.basic.users=admin:$apr1$qV96xSuQ$y3da6TZxscGOI3dCCQpfO/
    
    # whoami:
    #     image: containous/whoami
    #     labels:
    #         - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
    # adminer:
    #     container_name: adminer
    #     image: adminer
    #     restart: always
    #     ports:
    #         - 8080:8080
    #     networks: 
    #         - internal
volumes:
    db-data:    